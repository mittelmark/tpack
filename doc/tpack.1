.\" Automatically generated by Pandoc 3.1.11.1
.\"
.TH "tpack \- Tcl application deployment" "1" "2025\-10\-26" "tpack 0.7.0" "User Manual"
.SS NAME
\f[I]tpack\f[R] \- create single or two file Tcl applications based on
libraries in tar/lz4 archives
.SS SYNOPSIS
.IP
.EX
$ tpack \-\-help               # display usage information
$ tpack wrap app.tapp        # wraps app.tcl and app.vfs into app.tapp 
                             # where app.vfs is attached as base64 archive
$ tpack wrap app.tapp \-\-lz4  # as above but use base64 and lz4 for compression
$ tpack init app.tcl app.vfs # creates initial file app.tcl and folder app.vfs
$ tpack init app             #            as above
$ tpack init app.vfs         # create initial folder app.vfs
$ tpack unwrap app.tapp      # extracts app.tcl and app.vfs out of app.tapp
.EE
.SS DESCRIPTION
The \f[I]tpack\f[R] application can be used to simplify deployment of
Tcl applications to other computers and customers.
The application can create single file Tcl applications.
These single file applications, called tapp\-files contain at the top
the base64 / lz4 extraction code, the main tcl script and an attached
base64 archive where all files are encoded using base64 and file
separation lines containing the libraries required by this application
file.
At startup the base64 encoded files are detached from the file and
unpacked into a temporary folder from where the libraries are loaded.
The compression with lz4 needs an installed lz4 executable, the
decompression of the build executable is embedded into the final
application but requires a Tcl installation of at least 8.5.
.PP
The single file approach creates \f[I]app.tapp\f[R] file out of
\f[I]app.vfs\f[R] and \f[I]app.tcl\f[R].
.IP
.EX
tpack wrap app.tapp
.EE
.PP
The file \f[I]main.tcl\f[R] in the vfs\-folder should contain at least
the following line:
.IP
.EX
lappend auto_path [file join [file dirname [info script]] lib]
.EE
.PP
The \f[I]tpack\f[R] application provides as well a loader for default
starkit layouts, so a fake starkit package so that as well existing
starkits can be packed by \f[I]tpack\f[R], here a \f[I]main.tcl\f[R]
file from the tknotepad application.
.IP
.EX
package require starkit
if {[starkit::startup] == \[dq]sourced\[dq]} return
package require app\-tknotepad
.EE
.PP
In this case the application file tknotepad.tcl which is in the same
directoy as \f[I]tknotepad.vfs\f[R] can be just an empty file.
It can as well contain code to handel command line arguments.
Here the file tknotepad.tcl:
.IP
.EX
proc usage {} {
    puts \[dq]Usage: tknotepad filename\[dq]
}
if {[info exists argv0] && $argv0 eq [info script] && [regexp tknotepad $argv0]} {
    if {[llength $argv] > \-1 && [lsearch $argv \-\-help] > \-1} {
        usage
    } elseif {[llength $argv] > 0 && [file exists [lindex $argv 0]]} {
        openoninit [lindex $argv 0]
    }
}
.EE
.PP
That way you should be able to use your vfs\-folder for creating tpacked
applications as well for creating starkits.
.SS INSTALLATION
Make this file \c
.UR
https://raw.githubusercontent.com/mittelmark/tpack/refs/heads/main/tpack-b64.tcl
tpack\-b64.tcl
.UE \c
\ executable and copy it as \f[I]tpack\f[R] into a directory belonging
to your PATH environment.
There are no other Tcl libraries required to install, just a working
installation of Tcl/Tk of at least Tcl 8.5 is required.
.SS EXAMPLE
Let\[cq]s demonstrate a minimal application:
.IP
.EX
## FILE mini.tcl
#!/usr/bin/env tclsh
package require test
puts mini
puts [test::hello]
## FILE mini.vfs/main.tcl
lappend auto_path [file join [file dirname [info script]] lib]
## FILE mini.vfs/lib/test/pkgIndex.tcl
package ifneeded test 0.1 [list source [file join $dir test.tcl]]
## FILE mini.vfs/lib/test/test.tcl
package require Tcl
package provide test 0.1
namespace eval ::test { }
proc ::test::hello { } { puts \[dq]Hello World!\[dq] }
## EOF\[aq]s
.EE
.PP
There is the possibility to create such a minimal application
automatically for you if you start a new project by using the command
line options:
.IP
.EX
$ tpack init appname
# \- appname.tcl and appname.vfs folder with main.tcl and
#   lib/test Tcl files will be created automatically for you.
.EE
.PP
The string \f[I]appname\f[R] has to be replaced with the name of your
application.
If a the Tcl file or the VFS folder does already exists, \f[I]tpack\f[R]
for your safeness will refuse to overwrite them.
If the files were created, you can overwrite the Tcl file
(\f[I]appname.tcl\f[R]) with your own application and move your
libraries into the folder \f[I]appname.vfs\f[R].
If you are ready you call \f[CR]tpack wrap appname.tcl appname.vfs\f[R]
and you end up with two new files, \f[I]appname.ttcl\f[R] your
application code file, containing your code as well as some code to
encode and decode base64 files.
.PP
Attention: if mini.tapp is executed directly in the directory where
mini.vfs is located not the mini.tapp file but the folder will be used
for the libraries.
That can simplify the development.
.PP
You can rename mini.tapp to what every you like so \f[CR]mini.bin\f[R]
or even \f[CR]mini\f[R].
.SS CHANGELOG
.IP \[bu] 2
2021\-09\-10 \- release 0.1
.RS 2
.IP \[bu] 2
two file applications (ttcl and ttar) are working
.RE
.IP \[bu] 2
2021\-11\-10 \- release 0.2.0
.RS 2
.IP \[bu] 2
single file applications (ttap = ttcl+ttar in one file) are working as
well
.IP \[bu] 2
fake starkit::startup to load existing starkit apps without modification
.IP \[bu] 2
build sample apps tknotepad, pandoc\-tcl\-filter,
.RE
.IP \[bu] 2
2021\-11\-26 \- release 0.2.1
.RS 2
.IP \[bu] 2
bugfix: adding \f[CR]package forget tar\f[R] after tar file loading to
catch users \f[CR]package require tar\f[R]
.RE
.IP \[bu] 2
2022\-02\-16 \- release 0.3.0
.RS 2
.IP \[bu] 2
support for lz4 compression/decompression
.RE
.IP \[bu] 2
2024\-03\-14 \- release 0.3.1
.RS 2
.IP \[bu] 2
docu updates
.IP \[bu] 2
project moved to its own repo https://github.com/mittelmark/tpack
.RE
.IP \[bu] 2
2025\-01\-01 \- release 0.4.0
.RS 2
.IP \[bu] 2
making it Tcl 9 aware
.RE
.IP \[bu] 2
2025\-01\-02 \- release 0.4.1
.RS 2
.IP \[bu] 2
making it Tcl 9 aware, another fix
.RE
.IP \[bu] 2
2025\-01\-03 \- release 0.5.0
.RS 2
.IP \[bu] 2
rewrite using base64 instead of tar and as well only supporting single
file approach, so tapp files
.RE
.IP \[bu] 2
2025\-10\-13 \- release 0.6.0
.RS 2
.IP \[bu] 2
lz4 compression set to 9 as lz4 v1.10 seems to have lower compression
level as default
.RE
.IP \[bu] 2
2025\-10\-26 \- release 0.7.0
.RS 2
.IP \[bu] 2
fix for tmp folder issue for different users using the same application
.RE
.SS TODO
.IP \[bu] 2
nsis installer for Windows, to deploy minimal Tcl/Tk with the
application
.IP \[bu] 2
tclkit wrapping using sdx for Windows
.SS AUTHOR
.IP \[bu] 2
Copyright (c) 2021\-2025 Detlef Groth, University of Potsdam, Germany,
dgroth(at)uni(minus)potsdam(dot)de (tpack code)
.IP \[bu] 2
Copyright (c) 2017 dbohdan pur Tcl lz4 decompression code
.IP \[bu] 2
Copyright (c) 2013 Andreas Kupries
andreas_kupries(at)users.sourceforge(dot)net (tar code)
.IP \[bu] 2
Copyright (c) 2004 Aaron Faupell afaupell(at)users.sourceforge(sot)net
(tar code)
.SS LICENSE
.IP
.EX
BSD 3\-Clause License

Copyright (c) 2021\-2025 Detlef Groth, University of Potsdam, Germany

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its
   contributors may be used to endorse or promote products derived from
   this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \[dq]AS IS\[dq]
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.EE
.SH AUTHORS
Detlef Groth, University of Potsdam, Germany.
